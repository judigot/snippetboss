generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model language {
  lang_id           BigInt              @id @default(autoincrement())
  lang_name         String              @unique @db.VarChar(32)
  snippet_language snippet_language[]
}

model snippet {
  snippet_id        BigInt              @id @default(autoincrement())
  snippet_type_id   BigInt
  prefix_id         BigInt
  snippet_content   String?
  prefix            prefix              @relation(fields: [prefix_id], references: [prefix_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_snippet.prefix_id")
  snippet_type      snippet_type        @relation(fields: [snippet_type_id], references: [snippet_type_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_snippet.snippet_type_id")
  snippet_language snippet_language[]
}

model snippet_type {
  snippet_type_id   BigInt    @id @default(autoincrement())
  snippet_type_name String    @unique @db.VarChar(32)
  snippet           snippet[]
}

model prefix {
  prefix_id   BigInt    @id @default(autoincrement())
  prefix_name String    @unique @db.VarChar(32)
  snippet     snippet[]
}

model snippet_language {
  snippet_language_id BigInt   @id @default(autoincrement())
  language_id         BigInt
  snippet_id          BigInt
  language            language @relation(fields: [language_id], references: [lang_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_snippet_language.language_id")
  snippet             snippet  @relation(fields: [snippet_id], references: [snippet_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_snippet_language.snippet_id")
}
